service: aws-attendance-app
frameworkVersion: '3'

custom:
  tableName: 'Users'
  attendanceTableName: 'Attendance-dev'
  hashKey: 'userId'

provider:
  name: aws
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          # Resource:
          #   - Fn::GetAtt: [UsersTable, Arn]
          Resource: '*'

  environment:
    USERS_TABLE: ${self:custom.tableName}
    ATTENDANCE_TABLE: ${self:custom.attendanceTableName}
    HASH_KEY: ${self:custom.hashKey}

functions:
  create:
    handler: handlers/createUser.createUser
    events:
      - http:
          path: user/signup
          method: post
          cors: true
  login:
    handler: handlers/loginUser.loginUser
    events:
      - http:
          path: user/login
          method: post
          cors: true
  createAttendance:
    handler: handlers/createAttendance.createAttendance
    events:
      - http:
          path: user/attendance
          method: post
          cors: true
  getOwnAttendance:
    handler: handlers/getOwnAttendance.getOwnAttendance
    events:
      - http:
          path: user/own-attendance
          method: get
          cors: true
  getSortedAttendance:
    handler: handlers/getSortedAttendance.getSortedAttendance
    events:
      - http:
          path: user/sorted-attendance
          method: get
          cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    AttendanceTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.attendanceTableName}
# Note: Please note that when BillingMode is set to PAY_PER_REQUEST, you can not specify ProvisionedThroughput. Either you provide ProvisionedThroughput RCU, WCU values on the base table and GSI both or make BillingMode on the base table to be PAY_PER_REQUEST and donâ€™t specify ProvisionedThroughput anywhere.
